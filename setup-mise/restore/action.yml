---
name: "setup-mise - restore"

inputs:
  mise_envs:
    description: |
      A comma-separated list of environments.

      Mise looks for environment-targeted files named like mise.{ENV}.toml
      alongside the base mise.toml, and merges them with a defined precedence.

      Multiple environments can be specified in order, such as
      `mise_envs: "ci,test"`, with the last in the list taking precedence
      during merge.
    default: ""
    required: false
  mise_version:
    description: "The mise version to install (defaults to the latest)"
    default: ""
  working_directory:
    description: "The directory with the root of the project"
    default: "."
    required: false
  s3_credentials:
    description: |
      The S3 credentials as a JSON object. Must contain the following keys:

      - endpoint (no URL scheme)
      - access_key
      - secret_key
      - bucket_name
    type: "string"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Retrieve mise configuration"
      uses: "bckground/actions/setup-mise/internal@main"
      id: "mise-config"

    - name: "Restore mise"
      uses: "bckground/actions-cache/restore@8a7e86207dc72a3f6bd8cbc23f4f061558fee8f8"
      with:
        endpoint: ${{ fromJson(inputs.s3_credentials).endpoint }}
        accessKey: ${{ fromJson(inputs.s3_credentials).access_key }}
        secretKey: ${{ fromJson(inputs.s3_credentials).secret_key }}
        bucket: ${{ fromJson(inputs.s3_credentials).bucket_name }}
        use-fallback: false
        key: "mise-on-${{ runner.os }}-${{ runner.arch }}-"
        restore-keys: |
          mise-on-${{ runner.os }}-${{ runner.arch }}-
        path: |
          ${{ steps.mise-config.outputs.data_dir }}

    - name: "Set up mise"
      uses: "jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566" # v3.2.0
      env:
        MISE_ENV: "${{ inputs.mise_envs }}"
      with:
        version: "${{ inputs.mise_version }}"
        install: true # Run `mise install`.
        cache: false
        experimental: true # Enable experimental features.
        log_level: "debug"
        working_directory: "${{ inputs.working_directory }}"
        reshim: true
